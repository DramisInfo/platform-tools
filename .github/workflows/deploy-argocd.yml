name: Deploy ArgoCD Applications

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if no changes'
        required: false
        default: false
        type: boolean

jobs:
  sync-argocd:
    runs-on: self-hosted
    strategy:
      matrix:
        instance:
          - name: CACE-1
            url: https://argo.cace-1-dev.dramisinfo.com
            output_key: cace1_status
          # - name: CACE-2
          #   url: https://argo.cace-2-dev.dramisinfo.com
          #   output_key: cace2_status
      fail-fast: false  # Don't stop other jobs if one fails
    
    outputs:
      cace1_status: ${{ steps.sync.outputs.cace1_status }}
      cace2_status: ${{ steps.sync.outputs.cace2_status }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync ArgoCD Application on ${{ matrix.instance.name }}
        id: sync
        run: |
          echo "üöÄ Syncing agentic-system application on ${{ matrix.instance.name }}..."
          
          # Trigger sync
          SYNC_RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/${{ matrix.instance.output_key }}_sync.json \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{"revision": "HEAD", "prune": true, "dryRun": false}' \
            ${{ matrix.instance.url }}/api/v1/applications/agentic-system/sync)
          
          echo "${{ matrix.instance.name }} Sync HTTP Status: $SYNC_RESPONSE"
          
          if [[ "$SYNC_RESPONSE" == "200" ]]; then
            echo "‚úÖ ${{ matrix.instance.name }} sync initiated successfully"
            echo "${{ matrix.instance.output_key }}=success" >> $GITHUB_OUTPUT
          else
            echo "‚ùå ${{ matrix.instance.name }} sync failed with status: $SYNC_RESPONSE"
            echo "Response body:"
            cat /tmp/${{ matrix.instance.output_key }}_sync.json
            echo "${{ matrix.instance.output_key }}=failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Wait and Check Sync Status
        run: |
          echo "‚è≥ Waiting 30 seconds for sync operations to progress..."
          sleep 30
          
          echo "üîç Checking ${{ matrix.instance.name }} application status..."
          curl -s ${{ matrix.instance.url }}/api/v1/applications/agentic-system | \
            jq -r '.status.sync.status, .status.health.status' | \
            while read sync_status; read health_status; do
              echo "${{ matrix.instance.name }} - Sync: $sync_status, Health: $health_status"
            done

  summary:
    runs-on: self-hosted
    needs: sync-argocd
    if: always()  # Run even if sync jobs fail
    
    steps:
      - name: Generate Summary
        run: |
          echo "## ArgoCD Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Instance | Status | URL |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|-----|" >> $GITHUB_STEP_SUMMARY
          
          # Check CACE-1 result
          CACE1_RESULT="${{ needs.sync-argocd.result }}"
          if [[ "$CACE1_RESULT" == "success" ]]; then
            echo "| CACE-1 | ‚úÖ Success | [View App](https://argo.cace-1-dev.dramisinfo.com/applications/agentic-system) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| CACE-1 | ‚ùå Failed | [View App](https://argo.cace-1-dev.dramisinfo.com/applications/agentic-system) |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check CACE-2 result
          CACE2_RESULT="${{ needs.sync-argocd.result }}"
          if [[ "$CACE2_RESULT" == "success" ]]; then
            echo "| CACE-2 | ‚úÖ Success | [View App](https://argo.cace-2-dev.dramisinfo.com/applications/agentic-system) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| CACE-2 | ‚ùå Failed | [View App](https://argo.cace-2-dev.dramisinfo.com/applications/agentic-system) |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

      - name: Fail job if any sync failed
        if: needs.sync-argocd.result == 'failure'
        run: |
          echo "‚ùå One or more ArgoCD sync operations failed"
          exit 1
