apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kagent
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "0"  # Deploy after CRDs
spec:
  destination:
    namespace: kagent
    server: "https://kubernetes.default.svc"
  project: default
  source:
    repoURL: "ghcr.io/kagent-dev/kagent/helm"
    chart: kagent
    targetRevision: "0.6.14"  # Latest version as of documentation
    helm:
      valuesObject:
        # Global settings
        global:
          environment: "dev"
          clusterName: "cace-1-dev"
          
        # Image registry configuration to override the default cr.kagent.dev
        imageRegistry: "ghcr.io"
        
        # Component-specific image overrides
        controller:
          enabled: true  # Enable controller (was showing as running)
          # Ensure controller runs with secure context
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
        # LLM Provider Configuration
        providers:
          azureOpenAI:
            enabled: true
            apiKeySecret:
              name: azure-openai-secret
              key: api-key
          openAI:
            enabled: false  # Disable regular OpenAI since we're using Azure
        
        # UI configuration
        ui:
          enabled: true  # Enable UI
        
        # Engine configuration
        engine:
          enabled: false  # Disable engine for now due to image pull issues
          # Ensure engine runs with secure context when enabled
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
        
        # Default tool servers (optional - can be configured later)
        toolServers:
          kubernetes:
            enabled: true
          prometheus:
            enabled: false  # Enable if you have Prometheus in your cluster
          grafana:
            enabled: false  # Enable if you have Grafana in your cluster
          helm:
            enabled: true
        # Disable all built-in agents
        agents:
          k8s-agent:
            enabled: false
          kgateway-agent:
            enabled: false
          istio-agent:
            enabled: false
          promql-agent:
            enabled: false
          observability-agent:
            enabled: false
          argo-rollouts-agent:
            enabled: false
          helm-agent:
            enabled: false
          cilium-policy-agent:
            enabled: false
          cilium-manager-agent:
            enabled: false
          cilium-debug-agent:
            enabled: false
        
        # Pod-level security context (applies to all pods)
        # Allow individual components to override these settings
        podSecurityContext:
          fsGroup: 2000
        
        # Container-level security context (default for most containers)
        # Note: UI component needs to run as root for supervisord, so we'll
        # set runAsNonRoot: false globally, but specify runAsUser for non-UI components
        securityContext:
          runAsNonRoot: false  # Allow components to run as root if needed (UI requires this)
          # runAsUser: 1000    # Commented out to allow UI to run as root
        
        # Service account
        serviceAccount:
          create: true
          annotations: {}
          name: ""
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Validate=false
      - ServerSideApply=true