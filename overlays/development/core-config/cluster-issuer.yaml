---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-development
  namespace: cert-manager
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  acme:
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: frederic.simard@dramisinfo.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Secret resource that will be used to store the account's private key.
      name: example-issuer-account-key
    # Add a single challenge solver, HTTP01 using nginx
    solvers:
      - dns01:
          azureDNS:
            clientID: e427ae4e-a6c9-4c19-bb08-bd5f3ad2f133
            clientSecretSecretRef:
              # The following is the secret we created in Kubernetes. Issuer will use this to present challenge to Azure DNS.
              name: azuredns-config
              key: client-secret
            subscriptionID: c1d22d5c-418b-4bd9-ba23-5e806c376b56
            tenantID: b66f9c3b-d384-4932-92fd-444edca3620f
            resourceGroupName: rg-dns
            hostedZoneName: dev.dramisinfo.com
            # Azure Cloud Environment, default to AzurePublicCloud
            environment: AzurePublicCloud
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-vault
  namespace: cert-manager
# ---
# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: vault-issuer
#   namespace: cert-manager
#   finalizers:
#     - resources-finalizer.argocd.argoproj.io
# spec:
#   vault:
#     server: https://vault.platform.dramisinfo.com
#     path: pki/sign/dramisinfo-dot-com
#     caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQakNDQWlhZ0F3SUJBZ0lVVjhJaGN4MlRJc2dkekNjTU1pdFNGKzdRKzgwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dURVhNQlVHQTFVRUF4TU9aSEpoYldsemFXNW1ieTVqYjIwd0hoY05NalF3T0RNeE1UTXlOalV4V2hjTgpNalV3T0RNeE1UTXlOekl4V2pBWk1SY3dGUVlEVlFRREV3NWtjbUZ0YVhOcGJtWnZMbU52YlRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1nM0ZkWEFrY2t2UnVFdzZyMHF5SjVnMFlPNWxldFEKaWVYRHkxa3hvaHdJNVlPd0g3QnduMkk4YTBEZUhjUFpWR2ZSbmJSK0pOdlJwNGpibElPRWRxbUZoeDJyQTVicQpZd2tFZFBYVEdrWVFiSTU0c0ErQklKd2htNlViaWZtR3QyMGJORmd6ZGtML2lCN2JqdXVZMGRGaW5BYlJEM0wwCjNkRTIxelY3V3Vqa3QwSklIYndEN2JSYnpoZE4rWU9RVzV4b3plTkxMeU1rUjZvdHZ4QzZ6U1JpemNibmZKd20KenluUDZCZWMwdDdERGxocEZENHJoRTNZeUdBQ2lnMmJra2x5QUR0TThab3R0V090Q3NUNVlUWlNqOTE3ZGVpZQoyVytWdlI5elRwc2I4RWlrNGw4cndXUi9oSTQ2MlNzZDAyTHNzaHgweXptNy9wQzgwcWpnQ25NQ0F3RUFBYU4rCk1Id3dEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMajkKR3AvSFZFa2lVdFVUNHYreFRZYlVJWVZhTUI4R0ExVWRJd1FZTUJhQUZMajlHcC9IVkVraVV0VVQ0dit4VFliVQpJWVZhTUJrR0ExVWRFUVFTTUJDQ0RtUnlZVzFwYzJsdVptOHVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCCkFRQzJkelRNM3M4djJnUnc2Q3VscUNXYXRHVCtUTFlnUjVjeVBWejdQSzR0VDFSVm5La05ZQWNUM0k4L1NRMW0KcUVXUmhHc1hvdE9RcUxBd2hGMGlPZXROd1RoN2VhSDlkMVdwRW5DQk9oc1AvdEhXVUlKcVFpZVk4ZGVOTGxiRAo2bzJBS1JOZ2FUckVHSHB5by9kaGxOaWw1eDlBTTN6ZGYwT0tnYnN3YXRVWXd0VUtMREU5K2xyQzF4aWxUZ1ROCmtYUnpOeVA0WG9jQ3U0WFIzSzl1aUY2RzhObk5ydEVPQy8vUVNrRUxwTFUwbWc0OE5mUkJ5NEtJN0ZFTFk1VWMKNXNaTjBGd3FOMUhMTDhTcWNScFFSSEdrK2xRYVllcHNNYkd1Yno3dzJYUlBiMEJtNUJING4wckJ5SXQ5SzhZagp0Y2NFL3ZoTGp2SjU1blJucjJrZXV4cysKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
#     auth:
#       kubernetes:
#         mountPath: kubernetes
#         role: vault-role
