apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: vault
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://helm.releases.hashicorp.com
    targetRevision: "0.28.1"
    chart: vault
    helm:
      valuesObject:
        server:
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-platform
            hosts:
              - host: vault.platform.dramisinfo.com
            tls:
              - secretName: vault-tls
                hosts:
                  - vault.platform.dramisinfo.com
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Validate=false
      - Prune=true
      - ApplyOutOfSyncOnly=true
      - Force=true
  ignoreDifferences:
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      jqPathExpressions:
        - ".webhooks[].clientConfig.caBundle"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-vault
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-manager-vault-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-vault-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: cert-manager-vault
    namespace: default
roleRef:
  kind: Role
  name: cert-manager-vault-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: cert-manager-vault-token
  namespace: default
  annotations:
    kubernetes.io/service-account.name: cert-manager-vault
type: kubernetes.io/service-account-token
